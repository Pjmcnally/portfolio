/*csslint order-alphabetical: false, box-sizing: false*/

body {
    margin: 0;
    padding-top: 50px;
    padding-bottom:100px;
    min-width: 320px;
}

footer {
    /* Not sure why this isn't inherited from body*/
    min-width: 320px;
}

.container {
    font-family: 'Lora', serif;
    font-size: 18px;
}

.navbar-collapse {
    text-align: center;
}

.spell-detail-content {
    padding-left: 10px;
    background-color: lightgrey;
}

.spell-header:hover {
    background-color: lightgrey;
}

.spell-header .fa, .spell-level-header .fa {
    display: none;
    margin-left: 5px;
}

.spell-header:hover .fa, .spell-level-header:hover .fa {
    display: inline;
}

.spell-level-footer {
    text-align: center;
}

.spell-level-footer:hover {
    background-color: lightgrey;
}

.navbar-nav {
    display: inline-block;
    float: none;
}

.nav > li > a {
    padding: 10px 10px;
}

.form-control {
    display: inline-block;
}

.spell-level-header {
    padding-bottom: 2px;
    border-bottom: 2px solid #0A4958;
}

.spell-name {
    font-family: 'Mate SC', serif;
    font-size: 3em;
    margin-bottom: -5px;
}

.spell-detail-content h3 {
    font-size: 1.5em;
    margin-top: 0;
    padding-top: 15px;
}

.spell-school-level {
    font-size: 1.25em;
    font-style: italic;
}

.spell-detail-content .spell-school-level {
    font-size: 1em;
}

.spell-detail p {
    margin-bottom: 2px;
}

.spell-head, .spell-detail {
    margin-bottom: 20px;
}

.spell-text {
    padding-bottom: 1px;
    margin-bottom: 5px;
}

.spell-text table {
    background-color: transparent;
    border: 1px solid #0A4958;
    border-collapse: collapse;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    margin-bottom: 20px;
    max-width: 100%;
    width: 100%;
}

.spell-text thead {
    border-color: inherit;
    display: table-header-group;
    vertical-align: middle;
}

.spell-text th {
    background-color: #0A4958;
    color: white;
    font-weight: bold;
    padding: 8px;
    text-align: center;
}

.spell-text tbody tr:nth-child(even) {
   background-color: #ccc;
}

.spell-text td {
    padding: 8px;
    text-align: center;
}

/* This section impacts the advanced search section */
.search-option {
    display: inline-block;
    margin-right: 10px;
}

.search-option > p {
    display: inline-block;
}

.search button[value="true"] {
    border-color: green;
    -moz-box-shadow:    inset 0 0 8px 2px green;
    -webkit-box-shadow: inset 0 0 8px 2px green;
    box-shadow:         inset 0 0 8px 2px green;
}

.search button[value="false"] {
    border-color: red;
    -moz-box-shadow:    inset 0 0 8px 2px red;
    -webkit-box-shadow: inset 0 0 8px 2px red;
    box-shadow:         inset 0 0 8px 2px red;
}

.search button {
    margin-bottom: 5px;
}

.loader {
    height: 450px;
}


/*  Lines below are for spell loading animation
    This was adapted from code found at:
    https://martinwolf.org/blog/2015/01/pure-css-savingloading-dots-animation
*/
@keyframes blink {
    /**
     * At the start of the animation the dot
     * has an opacity of .2
     */
    0% {
      opacity: .2;
    }
    /**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
    20% {
      opacity: 1;
    }
    /**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
    100% {
      opacity: .2;
    }
}

.loading span {
    /**
     * Use the blink animation, which is defined above
     */
    animation-name: blink;
    /**
     * The animation should take 1.4 seconds
     */
    animation-duration: 1.4s;
    /**
     * It will repeat itself forever
     */
    animation-iteration-count: infinite;
    /**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
    animation-fill-mode: both;
}

.loading span:nth-child(2) {
    /**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .2s;
}

.loading span:nth-child(3) {
    /**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: .4s;
}
